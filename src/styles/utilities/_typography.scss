@use '../settings/typography' as t;
@use '../tools/typography' as type;
@use '../settings/breakpoints' as b;

// Generate typography utilities for each token
@each $token, $values in t.$typography-tokens {
  .u-text-#{$token} {
    @include type.typography($token);
  }

  // Generate responsive variants
  @each $breakpoint, $width in b.$breakpoints {
    @media (min-width: $width) {
      .u-text-#{$token}-#{$breakpoint} {
        @include type.typography($token, true);
      }
    }
  }
}

// Text alignment utilities
.u-text-left { @include type.text-align(left); }
.u-text-center { @include type.text-align(center); }
.u-text-right { @include type.text-align(right); }

// Line clamp utilities
.u-line-clamp-1 { @include type.line-clamp(1); }
.u-line-clamp-2 { @include type.line-clamp(2); }

// Text truncate utility
.u-truncate { @include type.truncate; }

// Text transform utilities
.u-uppercase { @include type.text-transform(uppercase); }
.u-lowercase { @include type.text-transform(lowercase); }
.u-capitalize { @include type.text-transform(capitalize); }

// Font family utilities
.u-font-primary { font-family: t.$font-family-primary; }
.u-font-mono { font-family: t.$font-family-mono; }

// Generate individual property utilities
@each $token, $values in t.$typography-tokens {
  // Font size only
  .u-font-size-#{$token} {
    @include type.font-size($token);
  }

  // Line height only
  .u-leading-#{$token} {
    @include type.line-height($token);
  }

  // Letter spacing only
  .u-tracking-#{$token} {
    @include type.letter-spacing($token);
  }
}

// Font weight utilities
.u-font-light { font-weight: t.$font-weight-light; }
.u-font-normal { font-weight: t.$font-weight-normal; }
.u-font-medium { font-weight: t.$font-weight-medium; }
.u-font-semibold { font-weight: t.$font-weight-semibold; }
.u-font-bold { font-weight: t.$font-weight-bold; } 