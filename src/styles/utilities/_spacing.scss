// Breakpoints map
$grid-breakpoints: (
  sm: 480px,
  md: 768px,
  lg: 1200px
);

// Spacing values map
$spacing-values: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 0.75rem,
  4: 1rem,
  5: 1.25rem,
  6: 1.5rem,
  8: 2rem
);

// Media query mixin
@mixin media-breakpoint-up($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    @media (min-width: map-get($grid-breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: '#{$breakpoint}'.";
  }
}

// Spacing mixin for component-specific use
@mixin spacing($property, $direction: null, $value: null) {
  @if $direction != null {
    #{$property}-#{$direction}: spacing($value);
  } @else {
    #{$property}: spacing($value);
  }
}



@function spacing($key) {
  // Ensure $key is numeric and exists in $spacing-values
  @if map-has-key($spacing-values, abs($key)) {
    @if $key < 0 {
      @return -(map-get($spacing-values, abs($key)));
    } @else {
      @return map-get($spacing-values, $key);
    }
  }
  @error "Invalid spacing value '#{$key}'. Use one of: #{map-keys($spacing-values)}.";
}






@each $key, $value in $spacing-values {
  // Margin utilities
  .u-m-#{$key} { margin: spacing($key); }
  .u-mt-#{$key} { margin-top: spacing($key); }
  .u-mr-#{$key} { margin-right: spacing($key); }
  .u-mb-#{$key} { margin-bottom: spacing($key); }
  .u-ml-#{$key} { margin-left: spacing($key); }
  .u-mx-#{$key} {
    margin-left: spacing($key);
    margin-right: spacing($key);
  }
  .u-my-#{$key} {
    margin-top: spacing($key);
    margin-bottom: spacing($key);
  }

  // Padding utilities
  .u-p-#{$key} { padding: spacing($key); }
  .u-pt-#{$key} { padding-top: spacing($key); }
  .u-pr-#{$key} { padding-right: spacing($key); }
  .u-pb-#{$key} { padding-bottom: spacing($key); }
  .u-pl-#{$key} { padding-left: spacing($key); }
  .u-px-#{$key} {
    padding-left: spacing($key);
    padding-right: spacing($key);
  }
  .u-py-#{$key} {
    padding-top: spacing($key);
    padding-bottom: spacing($key);
  }

  // Gap utilities
  .u-gap-#{$key} { gap: spacing($key); }
  .u-gap-x-#{$key} { column-gap: spacing($key); }
  .u-gap-y-#{$key} { row-gap: spacing($key); }
}


@each $breakpoint, $min-width in $grid-breakpoints {
  @include media-breakpoint-up($breakpoint) {
    @each $key, $value in $spacing-values {
      // Responsive margin utilities
      .u-m-#{$breakpoint}-#{$key} { margin: spacing($key); }
      .u-mt-#{$breakpoint}-#{$key} { margin-top: spacing($key); }
      .u-mr-#{$breakpoint}-#{$key} { margin-right: spacing($key); }
      .u-mb-#{$breakpoint}-#{$key} { margin-bottom: spacing($key); }
      .u-ml-#{$breakpoint}-#{$key} { margin-left: spacing($key); }
      .u-mx-#{$breakpoint}-#{$key} { 
        margin-left: spacing($key);
        margin-right: spacing($key);
      }
      .u-my-#{$breakpoint}-#{$key} {
        margin-top: spacing($key);
        margin-bottom: spacing($key);
      }

      // Responsive padding utilities
      .u-p-#{$breakpoint}-#{$key} { padding: spacing($key); }
      .u-pt-#{$breakpoint}-#{$key} { padding-top: spacing($key); }
      .u-pr-#{$breakpoint}-#{$key} { padding-right: spacing($key); }
      .u-pb-#{$breakpoint}-#{$key} { padding-bottom: spacing($key); }
      .u-pl-#{$breakpoint}-#{$key} { padding-left: spacing($key); }
      .u-px-#{$breakpoint}-#{$key} {
        padding-left: spacing($key);
        padding-right: spacing($key);
      }
      .u-py-#{$breakpoint}-#{$key} {
        padding-top: spacing($key);
        padding-bottom: spacing($key);
      }

      // Responsive gap utilities
      .u-gap-#{$breakpoint}-#{$key} { gap: spacing($key); }
      .u-gap-x-#{$breakpoint}-#{$key} { column-gap: spacing($key); }
      .u-gap-y-#{$breakpoint}-#{$key} { row-gap: spacing($key); }
    }
  }
}
